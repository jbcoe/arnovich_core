
# default libname
ifndef LIBNAME
	ERROR = "LIBNAME not defined"
endif
	
ifdef ERROR
	ERR = $(error BUILD ERROR:  ${ERROR} not defined)
endif

# default build config
BUILD ?= OSX
# DEBUG build on as default
DEBUG ?= 1

# where to put the build files
BUILDDIR ?= build
# where to put the test files
TESTDIR ?= test

# source dirs and files
SRCLIB=src/lib/
SRCBINLIB=src/bin/
SRCTESTLIB=test/
TMPLIB=$(BUILDDIR)/

MAKEFILEDIR = $(firstword $(.INCLUDE_DIRS))

SRCDIRS := $(wildcard $(SRCLIB)*) ./$(SRCLIB)
SRCFILES := $(foreach dir,$(SRCDIRS),$(wildcard $(dir)/*.c)) 

SRCBINDIRS = $(wildcard $(SRCBINLIB)*) ./$(SRCBINLIB)
SRCBINFILES := $(foreach dir,$(SRCBINDIRS),$(wildcard $(dir)/*.c))

SRCTESTDIRS = $(wildcard $(SRCTESTLIB)*)
SRCTESTFILES := $(foreach dir,$(SRCTESTDIRS),$(wildcard $(dir)/*.c))

# dependencies and objects
BUILDEXT = $(BUILD).DEBUG$(DEBUG)
OBJFILES = $(subst $(SRCLIB),,$(SRCFILES:.c=.${BUILDEXT}.o))
DEPFILES = $(subst $(SRCLIB),,$(SRCFILES:.c=.d))
BINFILES = $(subst $(SRCBINLIB),,$(SRCBINFILES:.c=.${BUILDEXT}))
DEPBINFILES = $(subst $(SRCBINLIB),,$(SRCBINFILES:.c=.d))
TESTFILES = $(subst $(SRCTESTLIB),,$(SRCTESTFILES:.c=.${BUILDEXT}))
DEPTESTFILES = $(subst $(SRCTESTLIB),,$(SRCTESTFILES:.c=.d))

# some common build stuff
MKDIR=mkdir -p
PRELIB=lib

LBUILD=$(shell echo $(BUILD) | tr A-Z a-z)
include Makefile.${LBUILD}

ifeq (${DEBUG},1)
	CCARGBIN += -g -DDEBUG=${DEBUG}
	CCARG += -g  -DDEBUG=${DEBUG}
else
	ifeq (${DEBUG},2)
		CCARGBIN += -g
		CCARG += -g
	else
		CCARGBIN += -O1
		CCARG += -O1
	endif
endif

VPATH = $(TMPLIB):$(SRCLIB):$(SRCBINLIB):$(SRCTESTLIB)

include $(DEPFILES)
include $(DEPBINFILES)
include $(DEPTESTFILES)

%.${BUILDEXT}.o : %.c
	@echo "compiling: $<"
	mkdir -p $(TMPLIB)$(@D)
	$(CC) $(CCARG) -o $(TMPLIB)$@ $<

%.d: %.c
	@echo "depending: $<"
	mkdir -p $(TMPLIB)$(@D)
	@set -e; rm -f $(TMPLIB)$@; \
	$(CC) -MM $(CCARGD) $< > $(TMPLIB)$@.$$$$; \
	sed 's,\($*\)\.o[ :]*,$(@D)/\1.o $(TMPLIB)$@ : ,g' < $(TMPLIB)$@.$$$$ > $(TMPLIB)$@; \
	rm -f $(TMPLIB)$@.$$$$

%.${BUILDEXT} : %.c
	@echo "compiling: $<"
	mkdir -p $(TMPLIB)$(@D)
	$(CC) $(CCARGBIN) -o $(TMPLIB)$@ $<

#### various targets

.PHONY: build_error
build_error: ; $(ERR)

all: build_error depends lib bin tests pylib

.PHONY: docs
docs:
	$(MKDIR) docs
	(cat $(MAKEFILEDIR)/core.doxy; echo "PROJECT_NUMBER=1.0"; echo "PROJECT_NAME=$(LIBNAME)") | doxygen -

pylib: build_error
	python src/pylib/setup.py build $(PYLIB_EXT)
	python src/pylib/setup.py install

clean:
	rm -rf $(BUILDDIR)

depends: $(DEPFILES) $(DEPBINFILES) $(DEPTESTFILES)

lib: $(BUILDLIB)${PRELIB}${LIBNAME}.$(EXTLIB)

tests: $(TESTFILES)

bin: $(BINFILES)

$(BUILDLIB)${PRELIB}${LIBNAME}.$(EXTLIB): build_error $(OBJFILES)
	$(MKDIR) $(BUILDLIB)
	$(LN) $(LNARG) -o $@ $(addprefix $(TMPLIB), $(OBJFILES)) $(LNARG)

